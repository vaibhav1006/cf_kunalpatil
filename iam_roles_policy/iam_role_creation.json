{
	"AWSTemplateFormatVersion" : "2010-09-09",

	"Description" : "IAM groups and users configuration",

	"Parameters" : {
	   "CustomerPrefix" : {
            "Type" : "String",
            "Default" : "testcust",
            "Description" : "Enter Customer Prefix"
        },

	   "Environment"    : {
            "Type" : "String",
            "Default" : "dt",
            "Description" : "Enter Environment (Input Format - d=development, t=test, a=acceptance, p=production, dt=devtest, ap=acceptanceproduction)",
            "AllowedValues" : [
                "d",
                "t",
                "a",
                "p",
                "dt",
                "ap"
            ]
        },
	
               		"Cfnrole" : {
			"Type"				    : "String",
			"Default"			    : "true",
			"Description"		  	: "Whether a role should be created for use with Aws Jenkins Service",
			"AllowedValues"			: ["true", "false"],
			"ConstraintDescription"	: "Must be true or false."
		},

		
		"CfnuserA" : { 
		"Type"				    : "String",
		"Default"			    : "sogetiadmin@capgemini.com",
		"Description"			: "Please provide IAM user name for group associated with A"	
		},
		
		"CfnuserApwd"  : { 
		"NoEcho"                : "true",
		"Type"				    : "String",
		"Default"			    : "sogetiadmin@123",
		"Description"			: "Please provide IAM user name password for group associated with A"	
		},
		
		"CfnuserApwdReset": {
        "Type"                  : "String",
        "Default"			    : "true",
		"Description"           : "Specifies if IAM user name for group associated with A Group contain users has password set or not",
		"AllowedValues"			: ["true", "false"],
		"ConstraintDescription"	: "Must be true or false."
		},
		
   	
		
		"CfnuserB" : { 
		"Type"				    : "String",
		"Default"			    : "sogetideveloper@capgemini.com",
		"Description"			: "Please provide IAM user name for group associated with B"		
		},
		
		"CfnuserBpwd"  : { 
		"NoEcho"                : "true",
		"Type"				    : "String",
		"Default"			    : "sogetideveloper@123",
		"Description"			: "Please provide IAM user name password for group associated with B"	
		},
		
		"CfnuserBpwdReset": {
        "Type"                  : "String",
        "Default"			    : "true",
		"Description"           : "Specifies if IAM user name for group associated with B Group contain users has password set or not",
		"AllowedValues"			: ["true", "false"],
		"ConstraintDescription"	: "Must be true or false."
		},
		
		"CfnuserC" : { 
		"Type"				    : "String",
		"Default"			    : "sogetidba@capgemini.com",
		"Description"			: "Please provide IAM user name for group associated with C"		
		},
		
		"CfnuserCpwd"  : { 
		"NoEcho"                : "true",
		"Type"				    : "String",
		"Default"			    : "sogetidba@123",
		"Description"			: "Please provide IAM user name password for group associated with C"	
		},
		
		"CfnuserCpwdReset": {
        "Type"                  : "String",
        "Default"			    : "true",
		"Description"           : "Specifies if IAM user name for group associated with C Group contain users has password set or not",
		"AllowedValues"			: ["true", "false"],
		"ConstraintDescription"	: "Must be true or false."
		},
		
		"CfnuserD" : { 
		"Type"				    : "String",
		"Default"			    : "sogetiro@capgemini.com",
		"Description"			: "Please provide IAM user name for group associated with D"		
		},
		
		"CfnuserDpwd"  : { 
		"NoEcho"                : "true",
		"Type"				    : "String",
		"Default"			    : "sogetiro@123",
		"Description"			: "Please provide IAM user name password for group associated with D"	
		},
		
		"CfnuserDpwdReset": {
        "Type"                  : "String",
        "Default"			    : "true",
		"Description"           : "Specifies if IAM user name for group associated with D Group contain users has password set or not",
		"AllowedValues"			: ["true", "false"],
		"ConstraintDescription"	: "Must be true or false."
		},
		
		"CfnRoleName" : { 
		"Type"				    : "String",
		"Default"			    : "Jenkins_Tool_Access",
		"Description"			: "Please provide IAM role name used for jenkins server"		
		},
		
		"CfnGroupA" : { 
		"Type"				    : "String",
		"Default"			    : "Administrator",
		"Description"			: "Please provide IAM group name A this  group contain users has full access and can delegate permissions to every service and resource in AWS"		
		},
		
		"CfnGroupB" : { 
		"Type"				    : "String",
		"Default"			    : "SystemAdministrator",
		"Description"			: "Please provide IAM group name B this group contain users sets up and maintains resources for development operations"		
		},
		
		"CfnGroupC" : { 
		"Type"				    : "String",
		"Default"			    : "DBA",
		"Description"			: "Please provide IAM group name C this group contain  users sets up, configures, and maintains databases in the AWS Cloud"		
		},
		
		"CfnGroupD" : { 
		"Type"				    : "String",
		"Default"			    : "Read-Only",
		"Description"			: "Please provide IAM group name D this group contain users has  read-only access to AWS services and resources"		
		}
		
		
		
	},
	

	"Conditions" :{
		"IsDev" : {
			"Fn::Equals" : [ { "Ref" : "Environment" }, "d" ]
		},
		"IsTest" : {
			"Fn::Equals" : [ { "Ref" : "Environment" }, "t" ]
		},
		"IsAt" : {
			"Fn::Equals" : [ { "Ref" : "Environment" }, "a" ]
		},
		"IsPrd" : {
			"Fn::Equals" : [ { "Ref" : "Environment" }, "p" ]
		},
		
		"IsDt" : {
			"Fn::Equals" : [ { "Ref" : "Environment" }, "dt" ]
		},
		
		"IsAp" : {
			"Fn::Equals" : [ { "Ref" : "Environment" }, "ap" ]
		},
		
		"CfnuserApwdReset" : {
			"Fn::Equals" : [ { "Ref" : "CfnuserApwdReset" }, "true" ]
		},
		
		"CfnuserBpwdReset" : {
			"Fn::Equals" : [ { "Ref" : "CfnuserBpwdReset" }, "true" ]
		},
		
		"CfnuserCpwdReset" : {
			"Fn::Equals" : [ { "Ref" : "CfnuserCpwdReset" }, "true" ]
		},
		
		"CfnuserDpwdReset" : {
			"Fn::Equals" : [ { "Ref" : "CfnuserDpwdReset" }, "true" ]
		},
		
		"Cfnrole" : {
			"Fn::Equals" : [ { "Ref" : "Cfnrole" }, "true" ]
		}
		
	},

	"Resources" : {

		   "UserA" : {
			"Type" : "AWS::IAM::User",
			"Properties" : {
			"UserName" : { "Ref" : "CfnuserA" },
            "LoginProfile" : {
            "Password" : { "Ref" : "CfnuserApwd" },
			"PasswordResetRequired" : { "Ref" : "CfnuserApwdReset" }
    		  }			
			
			}
         },		
		 
		 
		 "UserB" : {
			"Type" : "AWS::IAM::User",
			"Properties" : {
			"UserName" : { "Ref" : "CfnuserB" },
			"LoginProfile" : {
            "Password" : { "Ref" : "CfnuserBpwd" },
			"PasswordResetRequired" : { "Ref" : "CfnuserBpwdReset" }
    		  }
			}
         },

          "UserC" : {
			"Type" : "AWS::IAM::User",
			"Properties" : {
			"UserName" : { "Ref" : "CfnuserC" },
			"LoginProfile" : {
            "Password" : { "Ref" : "CfnuserCpwd" },
			"PasswordResetRequired" : { "Ref" : "CfnuserCpwdReset" }
    		  }
			}
         },	

		  "UserD" : {
			"Type" : "AWS::IAM::User",
			"Properties" : {
			"UserName" : { "Ref" : "CfnuserD" },
			"LoginProfile" : {
            "Password" : { "Ref" : "CfnuserDpwd" },
			"PasswordResetRequired" : { "Ref" : "CfnuserDpwdReset" }
    		  }
			}
         },		 

		 
			"AWSJenkinsServiceRole" : {
			"Type": "AWS::IAM::Role",
			"Condition" : "Cfnrole",
			"DependsOn" : "UserA",
			"Properties" : {
				"RoleName": { "Ref" : "CfnRoleName" },
				"AssumeRolePolicyDocument": {
					"Statement": [
				{
				"Sid": "",
				"Effect": "Allow",
				"Principal": {
				"Service": "cloudformation.amazonaws.com"
			    },
				"Action": "sts:AssumeRole"
			 },
            {
             "Sid": "",
             "Effect": "Allow",
             "Principal": {
             "AWS": { "Fn::Join" : [ "/", [ "arn:aws:iam::713729228264:user", { "Ref" : "CfnuserA" } ]]},
             "Service": "cloudformation.amazonaws.com"
            },
           
		   "Action": "sts:AssumeRole"
           }]
		  },
		  "ManagedPolicyArns": 
                    [
                        "arn:aws:iam::aws:policy/AdministratorAccess"
                    ]
		  
     	}
	},
	
		    "CfnUserAaccessKey" : {
			"Type" : "AWS::IAM::AccessKey",
			"Properties" : {
			"UserName" : { "Ref" : "UserA" }
			}
		},
		
		    "CfnUserBaccessKey" : {
			"Type" : "AWS::IAM::AccessKey",
			"Properties" : {
			"UserName" : { "Ref" : "UserB" }
			}
		},
		
		    "CfnUserCaccessKey" : {
			"Type" : "AWS::IAM::AccessKey",
			"Properties" : {
			"UserName" : { "Ref" : "UserC" }
			}
		},

		    "CfnUserDaccessKey" : {
			"Type" : "AWS::IAM::AccessKey",
			"Properties" : {
			"UserName" : { "Ref" : "UserD" }
			}
		},
		
			"CfnAaccountsGroup" : {
			"Type": "AWS::IAM::Group",
			"Properties" : {
			"GroupName" : { "Ref" : "CfnGroupA" },
			"ManagedPolicyArns": 
                    [
                        "arn:aws:iam::aws:policy/AdministratorAccess"
                    ]
            			
		}
       
	   },
	    
	        "CfnBaccountsGroup" : {
			"Type": "AWS::IAM::Group",
			"Properties" : {
			"GroupName" : { "Ref" : "CfnGroupB" },
			"ManagedPolicyArns": 
                    [
                        "arn:aws:iam::aws:policy/job-function/SystemAdministrator"
                    ]
            			
		}
       
	   },
	        "CfnCaccountsGroup" : {
			"Type": "AWS::IAM::Group",
			"Properties" : {
			"GroupName" : { "Ref" : "CfnGroupC" },
			"ManagedPolicyArns": 
                    [
                        "arn:aws:iam::aws:policy/job-function/DatabaseAdministrator"
                    ]
            			
		}
       
	   }, 
	   
	        "CfnDaccountsGroup" : {
			"Type": "AWS::IAM::Group",
			"Properties" : {
			"GroupName" : { "Ref" : "CfnGroupD" },
			"ManagedPolicyArns": 
                    [
                        "arn:aws:iam::aws:policy/ReadOnlyAccess"
                    ]
            			
		}
       
	   },
	   
	   
	     "CfnGroupAToUserAaddition" : { 
	     "Type": "AWS::IAM::UserToGroupAddition",
	     "Properties" : {
	     "GroupName" : { "Ref" : "CfnAaccountsGroup" },
	     "Users" : [ { "Ref" : "CfnuserA" } ]
		 
	  }
	  
	 },
	 
	 "CfnUserAToGroupAaddition" : { 
	   "Type": "AWS::IAM::UserToGroupAddition",
	   "Properties" : {
	     "Users" : [ { "Ref" : "CfnuserA" } ],
		 "GroupName" : { "Ref" : "CfnAaccountsGroup" }
	     
		 
	  }
	  
	 },
	 
	 "CfnGroupBToUserBaddition" : { 
	   "Type": "AWS::IAM::UserToGroupAddition",
	   "Properties" : {
	     "GroupName" : { "Ref" : "CfnBaccountsGroup" },
	     "Users" : [ { "Ref" : "CfnuserB" } ]
		 
	  }
	  
	 },
	 
	 "CfnUserBToGroupBaddition" : { 
	   "Type": "AWS::IAM::UserToGroupAddition",
	   "Properties" : {
	     "Users" : [ { "Ref" : "CfnuserB" } ],
		 "GroupName" : { "Ref" : "CfnBaccountsGroup" }
	     
		 
	  }
	  
	 },
	 
	     "CfnGroupCToUserCaddition" : { 
	     "Type": "AWS::IAM::UserToGroupAddition",
	     "Properties" : {
	     "GroupName" : { "Ref" : "CfnCaccountsGroup" },
	     "Users" : [ { "Ref" : "CfnuserC" } ]
		 
	  }
	  
	 },
	 
	    "CfnUserCToGroupCaddition" : { 
	    "Type": "AWS::IAM::UserToGroupAddition",
	    "Properties" : {
	    "Users" : [ { "Ref" : "CfnuserC" } ],
		"GroupName" : { "Ref" : "CfnCaccountsGroup" }
	     
	  }
	 
	 },
	 
	 "CfnGroupDToUserDaddition" : { 
	     "Type": "AWS::IAM::UserToGroupAddition",
	     "Properties" : {
	     "GroupName" : { "Ref" : "CfnDaccountsGroup" },
	     "Users" : [ { "Ref" : "CfnuserD" } ]
		 
	  }
	  
	 },
	 
	 "CfnUserDToGroupDaddition" : { 
	   "Type": "AWS::IAM::UserToGroupAddition",
	   "Properties" : {
	     "Users" : [ { "Ref" : "CfnuserD" } ],
		 "GroupName" : { "Ref" : "CfnDaccountsGroup" }
	     
		 
	  }
	  
	 }
	 
	 
	},

		"Outputs" : {
		
		"CfnUserAaccessKey" : {
			"Description" 	: "The access key for the CFN Group Admin",
			"Value"		: { "Ref" : "CfnUserAaccessKey" }
		},

		"CfnAUserSecretKey" : {
			"Description" 	: "The secret key for the CFN Group Adminstrator",
			"Value"		: { "Fn::GetAtt" : [ "CfnUserAaccessKey", "SecretAccessKey" ] }
		},
		
		"CfnUserBaccessKey" : {
			"Description" 	: "The access key for the CFN Group SystemAdministrator",
			"Value"		: { "Ref" : "CfnUserBaccessKey" }
		},

		"CfnBUserSecretKey" : {
			"Description" 	: "The secret key for the CFN Group associated with SystemAdministrator  ",
			"Value"		: { "Fn::GetAtt" : [ "CfnUserBaccessKey", "SecretAccessKey" ] }
		},
		
		"CfnUserCaccessKey" : {
			"Description" 	: "The access key for the CFN Group associated with DatabaseAdministrator",
			"Value"		: { "Ref" : "CfnUserCaccessKey" }
		},
		
		"CfnCUserSecretKey" : {
			"Description" 	: "The secret key for the CFN Group associated with DatabaseAdministrator",
			"Value"		: { "Fn::GetAtt" : [ "CfnUserCaccessKey", "SecretAccessKey" ] }
		},
		
		"CfnUserDaccessKey" : {
			"Description" 	: "The access key for the CFN Group associated with  Read-Only",
			"Value"		: { "Ref" : "CfnUserDaccessKey" }
		},
		
		"CfnDUserSecretKey" : {
			"Description" 	: "The secret key for the CFN Group associated with Read-Only",
			"Value"		: { "Fn::GetAtt" : [ "CfnUserDaccessKey", "SecretAccessKey" ] }
		}
		
		
	}
}

