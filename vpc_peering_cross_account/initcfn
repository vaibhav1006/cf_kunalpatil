#/bin/bash 

unset  AWS_SESSION_TOKEN

temp_role=$(aws sts assume-role --role-arn "arn:aws:iam::713729228264:role/Jenkins_Tool_Access" --role-session-name "client_role_jenkins" --query 'Credentials.[SecretAccessKey,AccessKeyId,SessionToken]' --output text)

# get the aws_secret_access_key
export AWS_SECRET_ACCESS_KEY=$(echo $temp_role | cut -f1 -d ' ')

# get the aws_secret_access_key
export AWS_ACCESS_KEY_ID=$(echo $temp_role | cut -f2 -d ' ')

# get the aws_secret_access_key
export AWS_SESSION_TOKEN=$(echo $temp_role | cut -f3 -d ' ')

env | grep -i AWS_


#Inputs
AwsAuthorizeAccountNumber=$1
CustomerPrefix=$2
Environment=$3
Region=$4
LocalVPC=$5
PeerVPC=$6
PeerVPCOwner=$7
PeerRoleName=$8

#Values

StackName=$CustomerPrefix"-"$Environment"-vpc-peering-cross-account-cfs"


command1="aws cloudformation describe-stacks --stack-name $StackName --query Stacks[].StackName --output text"

stack=$($command1)

echo $stack


#condition for create or update stack

if [ "$stack" = "$StackName" ]; then
aws cloudformation update-stack --stack-name $StackName --template-body file://vpc_peering/vpc_peering_cross_account.json --parameters ParameterKey=AwsAuthorizeAccountNumber,ParameterValue=$AwsAuthorizeAccountNumber  ParameterKey=CustomerPrefix,ParameterValue=$CustomerPrefix ParameterKey=Environment,ParameterValue=$Environment ParameterKey=Region,ParameterValue=$Region  ParameterKey=LocalVPC,ParameterValue=$LocalVPC ParameterKey=PeerVPC,ParameterValue=$PeerVPC ParameterKey=PeerVPCOwner,ParameterValue=$PeerVPCOwner ParameterKey=PeerRoleName,ParameterValue=$PeerRoleName --region $Region

echo "stack update in $StackName"

else

#Launch Cloudformation template
aws cloudformation create-stack --stack-name $StackName --template-body file://vpc_peering/vpc_peering.json --parameters ParameterKey=AwsAuthorizeAccountNumber,ParameterValue=$AwsAuthorizeAccountNumber  ParameterKey=CustomerPrefix,ParameterValue=$CustomerPrefix ParameterKey=Environment,ParameterValue=$Environment ParameterKey=Region,ParameterValue=$Region  ParameterKey=LocalVPC,ParameterValue=$LocalVPC ParameterKey=PeerVPC,ParameterValue=$PeerVPC ParameterKey=PeerVPCOwner,ParameterValue=$PeerVPCOwner ParameterKey=PeerRoleName,ParameterValue=$PeerRoleName --region $Region



#Wait for Template to complete
aws cloudformation wait stack-create-complete --stack-name $StackName --region $Region
fi
